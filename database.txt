--Nasabah get all 
select n.id, n.nama, n.alamat, n.telepon, coalesce(inning.total,0) as 'In', coalesce(outting.total,0) as 'Out'
from transaction_nasabah n left outer join 
	(select p.nasabah_id as id, sum(s.jumlah*s.harga) as total
	from transaction_pembelian p join transaction_pembelian_stocks ps
		on p.id = ps.pembelian_id join
		transaction_stok s on s.id = ps.stok_id
	group by p.nasabah_id) as inning on n.id = inning.id left outer join
	(select n.id as id, sum(p.total) as total
	from transaction_nasabah n join transaction_penarikan p on n.id = p.nasabah_id
	group by n.id) as outting on n.id = outting.id

	--sub in
	select p.nasabah_id as id, sum(s.jumlah*s.harga) as total
	from transaction_pembelian p join transaction_pembelian_stocks ps
		on p.id = ps.pembelian_id join
		transaction_stok s on s.id = ps.stok_id
	group by p.nasabah_id

	--sub out
	select n.id as id, sum(p.total) as total
	from nasabah n join penarikan p on n.id = p.nasabah_id
	group by n.id

--vendor get all
select v.id, v.nama, v.alamat, v.telepon, coalesce(r.sid,-1) as stokid, r.kode, r.nama as stok_nama, r.deskripsi, v.nama, v.alamat, v.telepon, coalesce(r.gross,0) as bruto, coalesce(r.netto,0) as netto
from transaction_vendor v left outer join (
		select p.vendor_id as id, s.id as sid, s.kode, s.nama, s.deskripsi, sum(dp.jumlah*dp.harga) as gross, sum(dp.jumlah*(dp.harga-s.harga)) as netto
		from transaction_detailpenjualan dp join transaction_penjualan p
			on dp.penjualan_id = p.id join
			transaction_stok_det s
			on s.id = dp.stok_id
		group by p.vendor_id, s.id
	) as r on v.id = r.id
order by v.id asc, bruto desc

	--sub penjualan total
	select p.vendor_id as id, s.id as sid, s.kode, s.nama, s.deskripsi, sum(dp.jumlah*dp.harga) as gross, sum(dp.jumlah*(dp.harga-s.harga)) as netto
	from transaction_detailpenjualan dp join transaction_penjualan p
		on dp.penjualan_id = p.id join
		transaction_stok_det s
		on s.id = dp.stok_id
	group by p.vendor_id, s.id


--pembelian get all
select p.id, r.sid, r.kode, r.nama, n.nama, r.tanggal, r.jumlah, r.harga
from transaction_pembelian p left outer join 
	(
		select ps.pembelian_id as id, s.id as sid, s.kode, s.nama, s.tanggal, s.jumlah, s.harga
		from transaction_pembelian_stocks ps join 
			(
				select s.id, k.kode, k.nama, s.tanggal, s.jumlah, s.harga
					from transaction_kategori k join transaction_stok s on k.id = s.kategori_id
			) s on
			ps.stok_id=s.id
	) r on p.id = r.id
	join transaction_nasabah n
		on n.id = p.nasabah_id
order by p.id asc

	--sub peritem pembelian
	select ps.pembelian_id as id, s.id as sid, s.kode, s.nama, s.tanggal, s.jumlah, s.harga
	from transaction_pembelian_stocks ps join 
		(
			select s.id, k.kode, k.nama, s.tanggal, s.jumlah, s.harga
				from transaction_kategori k join transaction_stok s on k.id = s.kategori_id
		) s on
		ps.stok_id=s.id

	--sub stok kategori
	select s.id, k.kode, k.nama, s.tanggal, s.jumlah, s.harga
	from transaction_kategori k join transaction_stok s on k.id = s.kategori_id

--penjualan get all
select p.id, p.vendor_id, v.nama as vendor_name, s.id as sid, s.nama as snama, s.kode as kode, s.deskripsi as ket, p.vendor_id, p.tanggal, sum(dp.jumlah*dp.harga) as gross, sum(dp.jumlah*(dp.harga-s.harga)) as netto
from transaction_detailpenjualan dp right outer join transaction_penjualan p
	on dp.penjualan_id = p.id join
	transaction_stok_det s
	on s.id = dp.stok_id join
	transaction_vendor v
	on p.vendor_id = v.id
group by p.id, s.id
order by p.tanggal desc, gross desc

--konversi get all
select *
from (
(select 1 as is_out, k.id, sd.id as stok_id, sd.kode, sd.nama, sd.deskripsi, sd.jumlah, sd.harga, sd.jumlah as jumlah2
	from transaction_konversi k join transaction_konversi_outs ko
		on k.id = ko.konversi_id
		join transaction_stok_det sd
		on ko.stok_id = sd.id)
UNION
(select 0 as is_out, k.id, sd.id as stok_id, sd.kode, sd.nama, sd.deskripsi, sd.jumlah, sd.harga, di.jumlah as jumlah2
	from transaction_konversi k join transaction_detailin di
		on k.id = di.konversi_id
		join transaction_stok_det sd
		on di.stok_id = sd.id
	)
) a
order by a.id, is_out
	--suboutting
	select k.id, sd.id as stok_id, sd.kode, sd.nama, sd.deskripsi, sd.jumlah, sd.harga
	from transaction_konversi k join transaction_konversi_outs ko
		on k.id = ko.konversi_id
		join transaction_stok_det sd
		on ko.stok_id = sd.id)

	--sub inning
	select k.id, sd.id as stok_id, sd.kode, sd.nama, sd.deskripsi, sd.jumlah, sd.harga, di.jumlah
	from transaction_konversi k join transaction_detailin di
		on k.id = di.konversi_id
		join transaction_stok_det sd
		on di.stok_id = sd.id

--Nasabah detail: nasabah all, all retrieval, all items

	--Nasabah all: where n.id = ''
	--All retrieval
	select p.*
	from transaction_nasabah n join transaction_penarikan p
		on n.id = p.nasabah_id
	where n.id = '1'

	--all items
	select s.id, s.kode, s.nama, sum(s.jumlah), sum(s.jumlah*s.harga)
	from transaction_pembelian p join transaction_pembelian_stocks ps
		on p.id = ps.pembelian_id join transaction_stok_det s
		on ps.stok_id = s.id
	where p.nasabah_id = ''
	group by s.id


--Vendor detail: all items
	select s.kode, s.nama, s.deskripsi, sum(dp.jumlah*dp.harga) as gross, sum(dp.jumlah*(dp.harga-s.harga)) as netto
	from transaction_detailpenjualan dp join transaction_penjualan p
		on dp.penjualan_id = p.id join
		transaction_stok_det s
		on s.id = dp.stok_id
	where p.vendor_id = %s
	group by s.kode

--Penjualan detail
select s.id as sid, s.nama as snama, s.kode as kode, dp.jumlah as jumlah, s.jumlah as jumlah2, dp.jumlah*dp.harga as gross, dp.jumlah*(dp.harga-s.harga) as netto
from transaction_detailpenjualan dp join
	transaction_stok_det s
	on s.id = dp.stok_id
where dp.penjualan_id=1
order by dp.id

--Pembelian detail
select *
from ((
select s.*, s.jumlah*s.harga as nilai_beli, dp.jumlah as jumlah_keluar, dp.harga as harga_keluar, dp.jumlah*dp.harga as nilai_keluar 
from (
		select s.*
		from transaction_pembelian_stocks p join transaction_stok_det s on p.stok_id = s.id
		where p.pembelian_id = %s
	) s left outer join transaction_detailpenjualan dp
	on s.id = dp.stok_id) 

Union

(select s.*, s.jumlah*s.harga as nilai_beli, di.jumlah as jumlah_keluar, s.harga as harga_keluar, di.jumlah*s.harga as nilai_keluar 
from (
		select s.*
		from transaction_pembelian_stocks p join transaction_stok_det s on p.stok_id = s.id
		where p.pembelian_id = %s
	) s left outer join transaction_detailin di
	on s.id = di.stok_id)) a
order by a.id

	--in side
	select *
	from transaction_stok_det s
	where s.pembelian_id = %s

	--penjualan-out side
	select s.*, s.jumlah*s.harga as nilai_beli, dp.jumlah as jumlah_keluar, dp.harga as harga_keluar, dp.jumlah*dp.harga as nilai_keluar 
	from (
			select s.*
			from transaction_pembelian_stocks p join transaction_stok_det s on p.stok_id = s.id
			where p.pembelian_id = %s
		) s left outer join transaction_detailpenjualan dp
		on s.id = dp.stok_id

	--konversi-out side
	select s.*, s.jumlah*s.harga as nilai_beli, di.jumlah as jumlah_keluar, s.harga as harga_keluar, di.jumlah*s.harga as nilai_keluar 
	from (
			select s.*
			from transaction_pembelian_stocks p join transaction_stok_det s on p.stok_id = s.id
			where p.pembelian_id = %s
		) s left outer join transaction_detailin di
		on s.id = di.stok_id


--konversi edit pembelian
select *
from ((
select if(dp.jumlah is null, 0,1) as status, s.*, s.jumlah*s.harga as nilai_beli, dp.jumlah as jumlah_keluar, dp.harga as harga_keluar, dp.jumlah*dp.harga as nilai_keluar, dp.jumlah*(dp.harga-s.harga) as netto, dp.penjualan_id as kode_status
from (
		select s.*
		from transaction_konversi_outs p join transaction_stok_det s on p.stok_id = s.id
		where p.konversi_id = %s
	) s left outer join transaction_detailpenjualan dp
	on s.id = dp.stok_id) 

Union

(select if(di.jumlah is null, 0,2) as status, s.*, s.jumlah*s.harga as nilai_beli, di.jumlah as jumlah_keluar, s.harga as harga_keluar, di.jumlah*s.harga as nilai_keluar, 0 as netto, di.konversi_id as kode_status
from (
		select s.*
		from transaction_transaction_konversi_outs p join transaction_stok_det s on p.stok_id = s.id
		where p.konversi_id = %s
	) s left outer join transaction_detailin di
	on s.id = di.stok_id)) a
order by a.id

--by id
select sd.id as stok_id, sd.tanggal, sd.kode, sd.jumlah as jumlah_in, coalesce(i.jumlah,0) as jumlah_konversi, coalesce(p.jumlah, 0) as jumlah_penjualan, sd.jumlah - coalesce(i.jumlah,0)- coalesce(p.jumlah,0) as sisa
from transaction_stok_det sd left outer join transaction_detailin i
	on sd.id = i.stok_id left outer join transaction_detailpenjualan p
	on sd.id = p.stok_id
where sd.kode = %s
order by sd.tanggal

--by kode
select sd.kode as kode, sum(sd.jumlah) as jumlah_in, sum(coalesce(i.jumlah,0)) as jumlah_konversi, sum(coalesce(p.jumlah, 0)) as jumlah_penjualan, sum(sd.jumlah - coalesce(i.jumlah,0)- coalesce(p.jumlah,0)) as sisa
from transaction_stok_det sd left outer join transaction_detailin i
	on sd.id = i.stok_id left outer join transaction_detailpenjualan p
	on sd.id = p.stok_id
group by sd.kode
order by sd.id

--pembelian pertanggal
select p.tanggal, sum(s.jumlah*s.harga)
from transaction_pembelian p join transaction_pembelian_stocks ps
	on p.id = ps.pembelian_id join transaction_stok s
	on ps.stok_id = s.id
group by p.tanggal
order by p.tanggal

--penjualan & "profit penjualan" pertanggal
select p.tanggal, sum(dp.jumlah*dp.harga) as gross, sum(dp.jumlah*(dp.harga-s.harga)) as netto
from transaction_detailpenjualan dp join transaction_penjualan p
	on dp.penjualan_id = p.id join
	transaction_stok_det s
	on s.id = dp.stok_id
group by p.tanggal
order by p.tanggal

--Penarikan pertanggal
select p.tanggal, sum(p.total)
from transaction_penarikan p
group by p.tanggal
order by p.tanggal

--penjualan "profit penjualan" perkategori
select s.kode, sum(dp.jumlah*dp.harga) as gross, sum(dp.jumlah*(dp.harga-s.harga)) as netto
from transaction_detailpenjualan dp join transaction_penjualan p
	on dp.penjualan_id = p.id join
	transaction_stok_det s
	on s.id = dp.stok_id
group by s.kode

--Total Saldo Nasabah
select sum(coalesce(inning.total,0) as 'In'), sum(coalesce(outting.total,0) as 'Out')
from transaction_nasabah n left outer join 
	(select p.nasabah_id as id, sum(s.jumlah*s.harga) as total
	from transaction_pembelian p join transaction_pembelian_stocks ps
		on p.id = ps.pembelian_id join
		transaction_stok s on s.id = ps.stok_id
	group by p.nasabah_id) as inning on n.id = inning.id left outer join
	(select n.id as id, sum(p.total) as total
	from transaction_nasabah n join transaction_penarikan p on n.id = p.nasabah_id
	group by n.id) as outting on n.id = outting.id

--Total Aset tertahan
select sd.kode as kode, sum(sd.jumlah) as jumlah_in, sum(coalesce(i.jumlah,0)) as jumlah_konversi, sum(coalesce(p.jumlah, 0)) as jumlah_penjualan, sum(sd.jumlah - coalesce(i.jumlah,0)- coalesce(p.jumlah,0)) as sisa
from transaction_stok_det sd left outer join transaction_detailin i
	on sd.id = i.stok_id left outer join transaction_detailpenjualan p
	on sd.id = p.stok_id
group by sd.kode
having sisa > 0
order by sd.kode


--Potential value


--Rata-rata konversi value


--Login